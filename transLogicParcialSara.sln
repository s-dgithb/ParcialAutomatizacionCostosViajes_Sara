// transLogicParcialSara.cpp : Este archivo contiene la función "main". La ejecución del programa comienza y termina ahí.
#include <iostream>
#include <limits>
using namespace std;
#include <string>

int costoViajes(int viajesRealizados, int distancia[], int costoPorKM[])
{
	int costoTotal =0;
	for (int i = 0; i < viajesRealizados; i++)
	{
		costoTotal = distancia[i] * costoPorKM[i];
	}
	return costoTotal;
}

int promDist(int distancia[], int viajesRealizados)
{
	int suma = 0;
	for (int d = 0; d < viajesRealizados; d++)
	{
		suma += distancia[d];
	}
	return suma / viajesRealizados;
}
int validarDato(int conductores)
{

	if (conductores > 10 || conductores < 0)
	{
		cout << "Error.";
		return 0;
	}
}

int validarDato2(int viajesRealizados)
{
	if (viajesRealizados > 10 || viajesRealizados < 0)
	{
		cout << "Error.";
		return 0;
	}
}
int main()
{
	int conductores;
	
	int viajesRealizados;
	
	int mayorIngreso[10];
	string nombreConductor[10];
	int promDistancia[10];

	cout << "Ingrese la cantidad de conductores (maximo 10): " << endl;
	cin >> conductores;
	validarDato(conductores);
	for (int cond = 0; cond < conductores; cond++)
	{
		cout << "Ingrese el nombre del conductor: " << endl;
		cin >> nombreConductor[cond];

		int costoPorKM[10];
		int distancia[10];
		int costoTotal[10];
		int promedioViajes;

		cout << "Ingrese la cantidad de viajes: " << endl;
		cin >> viajesRealizados;
		for (int k = 0; k < viajesRealizados; k++)
		{
			cout << "Ingrese la distancia: " << endl;
			cin >> distancia[k];
			cout << "Ingrese el costo por KM: " << endl;
			cin >> costoPorKM[k];
		}
		costoTotal[cond] = costoViajes(viajesRealizados, distancia, costoPorKM);
		promedioViajes = promDist(distancia, viajesRealizados);
		cout << "El promedio de los viajes es de: " << promedioViajes << endl;
		cout << "El costo total de los viajes es de: " << costoTotal[cond] << endl;

		int mayor = 0;
		for (int n = 0; n < costoTotal; n++)
		{
			mayorIngreso[cond] = costoTotal[cond];
			
		}
		
	}


}
